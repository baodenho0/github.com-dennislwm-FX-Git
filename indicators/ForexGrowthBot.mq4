/*
   Generated by EX4 TO MQ4 decompile Service 
   Website: http://www.ex4Tomq4.net 
   E-mail : info@ex4Tomq4.net 
*/
#property copyright "Copyright 2011, ForexGrowthBot"
#property link      "http://www.ForexGrowthBot.com"

#property indicator_chart_window

#import "fxgrbot.dll"
   int initQuant(int a0, int a1, int a2, double a3, double a4, double a5, int a6, int a7, double a8, int a9, string a10);
   double GetVolatilityRatio(double& a0[], double& a1[], int a2, int a3, int a4, int a5);
   int GetLicenseState(int a0);
#import

extern int FastVolatilityBase = 3;
extern int SlowVolatilityBase = 50;
extern double VolatilityFactor = 1.5;
extern bool SmallArrow = TRUE;
string gs_96 = "";
double gd_unused_104 = 0.0;
int g_fontsize_112 = 7;
string gs_tahoma_116 = "Tahoma";
bool gi_124 = TRUE;
int g_color_128 = White;
int gi_132 = 0;
int g_x_136 = 4;
string gs_140 = " Basic 1.6 ";
int g_datetime_148;
int gi_152 = 0;

void LockInitCall() {
   if (!GlobalVariableCheck("FXLockInitCall")) GlobalVariableSet("FXLockInitCall", 0);
   if (!IsTesting()) {
      while (GlobalVariableGet("FXLockInitCall") == 1.0) {
         Sleep(250);
         RefreshRates();
      }
      GlobalVariableSet("FXLockInitCall", 1);
   }
}

void UnLockInitCall() {
   if (!GlobalVariableCheck("FXLockInitCall")) GlobalVariableSet("FXLockInitCall", 0);
   if (!IsTesting()) GlobalVariableSet("FXLockInitCall", 0);
}

int init() {
   gi_152 = 1974;
   LockInitCall();
   string ls_0 = "ForexGrowBot";
   IndicatorShortName(ls_0);
   SetIndexLabel(0, ls_0);
   gs_96 = MathRand();
   g_datetime_148 = iTime(NULL, Period(), 0);
   UnLockInitCall();
   return (0);
}

int start() {
   string text_0;
   int li_8;
   string text_12;
   int li_20;
   int li_24;
   double ld_28;
   int li_40;
   string name_44;
   int li_unused_52;
   int li_unused_56;
   int li_unused_60;
   double ld_unused_64;
   double ld_unused_72;
   double lda_80[];
   double lda_84[];
   int li_88;
   double ld_92;
   if (gi_124) {
      ObjectDelete("fgbLicenseInfo" + gi_152);
      ObjectCreate("fgbLicenseInfo" + gi_152, OBJ_LABEL, 0, 0, 0);
      ObjectSetText("fgbLicenseInfo" + gi_152, "ForexGrowthBot" + gs_140 + "license status: VERIFYING", g_fontsize_112, gs_tahoma_116, g_color_128);
      ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_CORNER, 0);
      ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_XDISTANCE, g_x_136);
      ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_YDISTANCE, 15);
      gi_124 = FALSE;
   }
   if (gi_132 == 0 && AccountNumber() > 0) {
      LockInitCall();
      initQuant(AccountNumber(), 99, 1, 1, 1, 1, 1, 1, 1, 0, "");
      UnLockInitCall();
      if (GetLicenseState(AccountNumber()) != 0) {
         gi_132 = GetLicenseState(AccountNumber());
         text_0 = "";
         if (gi_132 == 1) text_0 = "ForexGrowthBot" + gs_140 + "license status: ACTIVE";
         if (gi_132 == 2) text_0 = "ForexGrowthBot" + gs_140 + "license status: NOT ACTIVE! ACTIVATE YOUR ACCOUNT, PLEASE!";
         ObjectDelete("fgbLicenseInfo" + gi_152);
         ObjectCreate("fgbLicenseInfo" + gi_152, OBJ_LABEL, 0, 0, 0);
         ObjectSetText("fgbLicenseInfo" + gi_152, text_0, g_fontsize_112, gs_tahoma_116, g_color_128);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_CORNER, 0);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_XDISTANCE, g_x_136);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_YDISTANCE, 15);
      }
   }
   if (iTime(NULL, Period(), 0) - g_datetime_148 >= 5) {
      li_8 = GetLicenseState(AccountNumber());
      text_12 = "";
      if (li_8 == 1) text_12 = "ForexGrowthBot" + gs_140 + "license status: ACTIVE";
      if (li_8 == 2) text_12 = "ForexGrowthBot" + gs_140 + "license status: NOT ACTIVE! ACTIVATE AN ACCOUNT, PLEASE!";
      if (li_8 > 0) {
         ObjectDelete("fgbLicenseInfo" + gi_152);
         ObjectCreate("fgbLicenseInfo" + gi_152, OBJ_LABEL, 0, 0, 0);
         ObjectSetText("fgbLicenseInfo" + gi_152, text_12, g_fontsize_112, gs_tahoma_116, g_color_128);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_CORNER, 0);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_XDISTANCE, g_x_136);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_YDISTANCE, 15);
      }
   }
   if (GetLicenseState(AccountNumber()) != 0) {
      li_20 = IndicatorCounted();
      if (li_20 < 0) {
         li_20 = 110;
         Clear();
      } else li_20--;
      li_24 = Bars - li_20;
      if (Bars > 133) {
         ld_28 = MathAbs(High[Bars - 1] - Low[WindowFirstVisibleBar()]);
         for (int li_36 = li_24; li_36 > 0; li_36--) {
            li_40 = 0;
            name_44 = "-!@!-" + gs_96 + Time[li_36];
            if (ObjectFind(name_44) >= 0) ObjectDelete(name_44);
            li_unused_52 = li_36;
            li_unused_56 = 0;
            li_unused_60 = 0;
            ld_unused_64 = -10000;
            ld_unused_72 = 0;
            li_88 = 0;
            if (ArraySize(Close) - li_36 > 101) {
               li_88 = ArrayCopy(lda_80, Close, 0, li_36, 100);
               li_88 = ArrayCopy(lda_84, Open, 0, li_36, 100);
            }
            if (li_88 == 100) {
               ld_92 = GetVolatilityRatio(lda_80, lda_84, FastVolatilityBase, SlowVolatilityBase, 100, AccountNumber());
               if (MathAbs(ld_92) > VolatilityFactor) {
                  if (ld_92 > 0.0) li_40 = 1;
                  else li_40 = -1;
               }
            }
            if (li_40 == 1) {
               if (!SmallArrow) {
                  ObjectCreate(name_44, OBJ_ARROW, 0, Time[li_36], Low[li_36]);
                  ObjectSet(name_44, OBJPROP_ARROWCODE, 233);
                  ObjectSet(name_44, OBJPROP_WIDTH, 1);
                  ObjectSet(name_44, OBJPROP_COLOR, Green);
               } else {
                  ObjectCreate(name_44, OBJ_ARROW, 0, Time[li_36], Low[li_36]);
                  ObjectSet(name_44, OBJPROP_ARROWCODE, 1);
                  ObjectSet(name_44, OBJPROP_WIDTH, 1);
                  ObjectSet(name_44, OBJPROP_COLOR, Green);
               }
            }
            if (li_40 == -1) {
               if (!SmallArrow) {
                  ObjectCreate(name_44, OBJ_ARROW, 0, Time[li_36], High[li_36] + ld_28 / 100.0);
                  ObjectSet(name_44, OBJPROP_ARROWCODE, 234);
                  ObjectSet(name_44, OBJPROP_WIDTH, 1);
                  ObjectSet(name_44, OBJPROP_COLOR, Red);
                  continue;
               }
               ObjectCreate(name_44, OBJ_ARROW, 0, Time[li_36], High[li_36]);
               ObjectSet(name_44, OBJPROP_ARROWCODE, 2);
               ObjectSet(name_44, OBJPROP_WIDTH, 1);
               ObjectSet(name_44, OBJPROP_COLOR, Red);
            }
         }
      }
   }
   return (0);
}

int deinit() {
   ObjectDelete("fgbLicenseInfo" + gi_152);
   Clear();
   return (0);
}

void Clear() {
   string name_8;
   int objs_total_0 = ObjectsTotal();
   for (int li_4 = objs_total_0 - 1; li_4 >= 0; li_4--) {
      name_8 = ObjectName(li_4);
      if (StringFind(name_8, "-!@!-" + gs_96) >= 0) ObjectDelete(name_8);
   }
}
