//|-----------------------------------------------------------------------------------------|
//|                                                                 ForexGrowthBotTrend.mq4 |
//|                                                            Copyright © 2011, Dennis Lee |
//| Assert History                                                                          |
//| 1.20    Added extern fade breakout for user.                                            |
//|         Delete all lines if volatility factor is less than threshold.                   |
//| 1.12    Updated only create trend and target lines if there are no open positions.      |
//| 1.11    Updated with Swiss target lines.                                                |
//| 1.10    Added PlusViz.mqh.                                                              |
//| 1.00    Generated by EX4 TO MQ4 decompile Service.                                      |
//|-----------------------------------------------------------------------------------------|
#property copyright "Copyright 2011, ForexGrowthBot"
#property link      "http://www.ForexGrowthBot.com"

#property indicator_chart_window

#import "fxgrbot.dll"
   int initQuant(int a0, int a1, int a2, double a3, double a4, double a5, int a6, int a7, double a8, int a9, string a10);
   double GetVolatilityRatio(double& a0[], double& a1[], int a2, int a3, int a4, int a5);
   int GetLicenseState(int a0);
#import

//---- Assert PlusViz.mqh
#include <plusviz.mqh>
extern string Linex1="linex1";
extern string Linex2="linex2";
extern bool   FadeBreakout=true;
extern int    Linex1Magic=20090206;
extern int    Linex2Magic=20090207;
extern string SwissTarget1="target1";
extern string SwissTarget2="target2";

//|-----------------------------------------------------------------------------------------|
//|                                O R D E R S   S T A T U S                                |
//|-----------------------------------------------------------------------------------------|
int EasyOrdersMagic(int mgc)
{
   int count=0;

//---- Assert determine count of all trades done with this MagicNumber
   for(int j=0;j<OrdersTotal();j++)
   {
      OrderSelect(j,SELECT_BY_POS,MODE_TRADES);

   //---- Assert MagicNumber and Symbol is same as Order
      if (OrderMagicNumber()==mgc && OrderSymbol()==Symbol())
         count++;
   }
   return(count);
}

//|-----------------------------------------------------------------------------------------|
//|          F O R E X G R O W T H B O T   E X T E R N A L   V A R I A B L E S              |
//|-----------------------------------------------------------------------------------------|

extern int FastVolatilityBase = 3;
extern int SlowVolatilityBase = 50;
extern double VolatilityFactor = 1.5;
extern bool SmallArrow = TRUE;
extern int AccountNo = 404803;

//|-----------------------------------------------------------------------------------------|
//|                           I N T E R N A L   V A R I A B L E S                           |
//|-----------------------------------------------------------------------------------------|

string gs_96 = "";
double gd_unused_104 = 0.0;
int g_fontsize_112 = 7;
string gs_tahoma_116 = "Tahoma";
bool gi_124 = TRUE;
int g_color_128 = White;
int ActiveStatus = 0;
int g_x_136 = 4;
string gs_140 = "Trend 1.6 ";
int g_datetime_148;
int gi_152 = 0;

//|-----------------------------------------------------------------------------------------|
//|                             I N I T I A L I Z A T I O N                                 |
//|-----------------------------------------------------------------------------------------|

void LockInitCall() {
   if (!GlobalVariableCheck("FXLockInitCall")) GlobalVariableSet("FXLockInitCall", 0);
   if (!IsTesting()) {
      while (GlobalVariableGet("FXLockInitCall") == 1.0) {
         Sleep(250);
         RefreshRates();
      }
      GlobalVariableSet("FXLockInitCall", 1);
   }
}

void UnLockInitCall() {
   if (!GlobalVariableCheck("FXLockInitCall")) GlobalVariableSet("FXLockInitCall", 0);
   if (!IsTesting()) GlobalVariableSet("FXLockInitCall", 0);
}

int init() {
   gi_152 = 1974;
   LockInitCall();
   string shortname = "ForexGrowBot";
   IndicatorShortName(shortname);
   SetIndexLabel(0, shortname);
   gs_96 = MathRand();
   g_datetime_148 = iTime(NULL, Period(), 0);
   UnLockInitCall();
   return (0);
}

//|-----------------------------------------------------------------------------------------|
//|                               M A I N   P R O C E D U R E                               |
//|-----------------------------------------------------------------------------------------|

int start() {
   string text_0;
   int active;
   string text_12;
   int li_20;
   int li_24;
   double ld_28;
   int signal;
   string ArrowName;
   int li_unused_52;
   int li_unused_56;
   int li_unused_60;
   double ld_unused_64;
   double ld_unused_72;
   double CloseBuf[];
   double OpenBuf[];
   int active8;
   double volfactor;
   if (gi_124) {
      ObjectDelete("fgbLicenseInfo" + gi_152);
      ObjectCreate("fgbLicenseInfo" + gi_152, OBJ_LABEL, 0, 0, 0);
      ObjectSetText("fgbLicenseInfo" + gi_152, "ForexGrowthBot" + gs_140 + "license status: VERIFYING", g_fontsize_112, gs_tahoma_116, g_color_128);
      ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_CORNER, 0);
      ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_XDISTANCE, g_x_136);
      ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_YDISTANCE, 15);
      gi_124 = FALSE;
   }
   if (ActiveStatus == 0 && AccountNo > 0) {
      LockInitCall();
      initQuant(AccountNo, 99, 1, 1, 1, 1, 1, 1, 1, 0, "");
      UnLockInitCall();
      if (GetLicenseState(AccountNo) != 0) {
         ActiveStatus = GetLicenseState(AccountNo);
         text_0 = "";
         if (ActiveStatus == 1) text_0 = "ForexGrowthBot" + gs_140 + "license status: ACTIVE" + FGBComment() + VizComment();
         if (ActiveStatus == 2) text_0 = "ForexGrowthBot" + gs_140 + "license status: NOT ACTIVE! ACTIVATE YOUR ACCOUNT, PLEASE!";
         ObjectDelete("fgbLicenseInfo" + gi_152);
         ObjectCreate("fgbLicenseInfo" + gi_152, OBJ_LABEL, 0, 0, 0);
         ObjectSetText("fgbLicenseInfo" + gi_152, text_0, g_fontsize_112, gs_tahoma_116, g_color_128);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_CORNER, 0);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_XDISTANCE, g_x_136);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_YDISTANCE, 15);
      }
   }
   if (iTime(NULL, Period(), 0) - g_datetime_148 >= 5) {
      active = GetLicenseState(AccountNo);
      text_12 = "";
      if (active == 1) text_12 = "ForexGrowthBot" + gs_140 + "license status: ACTIVE" + FGBComment() + VizComment();
      if (active == 2) text_12 = "ForexGrowthBot" + gs_140 + "license status: NOT ACTIVE! ACTIVATE AN ACCOUNT, PLEASE!";
      if (active > 0) {
         ObjectDelete("fgbLicenseInfo" + gi_152);
         ObjectCreate("fgbLicenseInfo" + gi_152, OBJ_LABEL, 0, 0, 0);
         ObjectSetText("fgbLicenseInfo" + gi_152, text_12, g_fontsize_112, gs_tahoma_116, g_color_128);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_CORNER, 0);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_XDISTANCE, g_x_136);
         ObjectSet("fgbLicenseInfo" + gi_152, OBJPROP_YDISTANCE, 15);
      }
   }
   if (GetLicenseState(AccountNo) != 0) {
      li_20 = IndicatorCounted();
      if (li_20 < 0) {
         li_20 = 110;
         Clear();
      } else li_20--;
      li_24 = Bars - li_20;
      if (Bars > 133) {
         ld_28 = MathAbs(High[Bars - 1] - Low[WindowFirstVisibleBar()]);
         for (int i = li_24; i > 0; i--) {
            signal = 0;
            ArrowName = "-!@!-" + gs_96 + Time[i];
            if (ObjectFind(ArrowName) >= 0) ObjectDelete(ArrowName);
            li_unused_52 = i;
            li_unused_56 = 0;
            li_unused_60 = 0;
            ld_unused_64 = -10000;
            ld_unused_72 = 0;
            active8 = 0;
            if (ArraySize(Close) - i > 101) {
               active8 = ArrayCopy(CloseBuf, Close, 0, i, 100);
               active8 = ArrayCopy(OpenBuf, Open, 0, i, 100);
            }
            if (active8 == 100) {
               volfactor = GetVolatilityRatio(CloseBuf, OpenBuf, FastVolatilityBase, SlowVolatilityBase, 100, AccountNo);
               if (MathAbs(volfactor) > VolatilityFactor) {
                  if (volfactor > 0.0) signal = 1;
                  else signal = -1;
               }
            }
            if (signal == 1) {
               if (!SmallArrow) {
                  ObjectCreate(ArrowName, OBJ_ARROW, 0, Time[i], Low[i]);
                  ObjectSet(ArrowName, OBJPROP_ARROWCODE, 233);
                  ObjectSet(ArrowName, OBJPROP_WIDTH, 1);
                  ObjectSet(ArrowName, OBJPROP_COLOR, Green);
               } else {
                  ObjectCreate(ArrowName, OBJ_ARROW, 0, Time[i], Low[i]);
                  ObjectSet(ArrowName, OBJPROP_ARROWCODE, 1);
                  ObjectSet(ArrowName, OBJPROP_WIDTH, 1);
                  ObjectSet(ArrowName, OBJPROP_COLOR, Green);
               }
               if (i<=1)
               {
               //--- Assert Added PlusViz.mqh.
               //    Create a Buy Stop Linex at 6 pips ABOVE Close.
                  if (EasyOrdersMagic(Linex1Magic)<=0)
                  {
                     if(!FadeBreakout)
                     {
                        VizDoublePriceCreate(Linex1,Close[i]+0.0006,StringConcatenate(Linex1," Buy ",DoubleToStr(Close[i]+0.0006,5)," VolFactor=",DoubleToStr(volfactor,2)," Close[",i,"]=",DoubleToStr(Close[i],5)));
                        VizDoublePriceCreate(SwissTarget1,Close[i]+0.0020,StringConcatenate(SwissTarget1," for ",Linex1," ",DoubleToStr(Close[i]+0.0020,5)));
                     }
                     else
                     {
                        VizDoublePriceCreate(Linex2,Close[i]-0.0006,StringConcatenate(Linex2," Sell ",DoubleToStr(Close[i]-0.0006,5)," VolFactor=",DoubleToStr(volfactor,2)," Close[",i,"]=",DoubleToStr(Close[i],5)));
                        VizDoublePriceCreate(SwissTarget2,Close[i]-0.0020,StringConcatenate(SwissTarget2," for ",Linex2," ",DoubleToStr(Close[i]-0.0020,5)));
                     }
                  }
               }
            }
            if (signal == -1) {
               if (!SmallArrow) {
                  ObjectCreate(ArrowName, OBJ_ARROW, 0, Time[i], High[i] + ld_28 / 100.0);
                  ObjectSet(ArrowName, OBJPROP_ARROWCODE, 234);
                  ObjectSet(ArrowName, OBJPROP_WIDTH, 1);
                  ObjectSet(ArrowName, OBJPROP_COLOR, Red);
               } else {
                  ObjectCreate(ArrowName, OBJ_ARROW, 0, Time[i], High[i]);
                  ObjectSet(ArrowName, OBJPROP_ARROWCODE, 2);
                  ObjectSet(ArrowName, OBJPROP_WIDTH, 1);
                  ObjectSet(ArrowName, OBJPROP_COLOR, Red);
               }
               if (i<=1)
               {
               //    Create a Sell Stop Linex at 6 pips BELOW Close.
                  if (EasyOrdersMagic(Linex2Magic)<=0)
                  {
                     if(!FadeBreakout)
                     {
                        VizDoublePriceCreate(Linex2,Close[i]-0.0006,StringConcatenate(Linex2," Sell ",DoubleToStr(Close[i]-0.0006,5)," VolFactor=",DoubleToStr(volfactor,2)," Close[",i,"]=",DoubleToStr(Close[i],5)));
                        VizDoublePriceCreate(SwissTarget2,Close[i]-0.0020,StringConcatenate(SwissTarget2," for ",Linex2," ",DoubleToStr(Close[i]-0.0020,5)));
                     }
                     else
                     {
                        VizDoublePriceCreate(Linex1,Close[i]+0.0006,StringConcatenate(Linex1," Buy ",DoubleToStr(Close[i]+0.0006,5)," VolFactor=",DoubleToStr(volfactor,2)," Close[",i,"]=",DoubleToStr(Close[i],5)));
                        VizDoublePriceCreate(SwissTarget1,Close[i]+0.0020,StringConcatenate(SwissTarget1," for ",Linex1," ",DoubleToStr(Close[i]+0.0020,5)));
                     }
                  }
               }
            }
            if(signal==0)
            {
               if(i<=1)
               {
                  if(ObjectFind(Linex1)>=0) ObjectDelete(Linex1);
                  if(ObjectFind(Linex2)>=0) ObjectDelete(Linex2);
                  if(ObjectFind(SwissTarget1)>=0) ObjectDelete(SwissTarget1);
                  if(ObjectFind(SwissTarget2)>=0) ObjectDelete(SwissTarget2);
                  
               }
            }
         }
      }
   }
   return (0);
}

//|-----------------------------------------------------------------------------------------|
//|                                     C O M M E N T                                       |
//|-----------------------------------------------------------------------------------------|
string FGBComment(string cmt="")
{
   string strtmp = cmt+"\n  ";

   if(!FadeBreakout) 
      strtmp=strtmp+"Trade";
   else
      strtmp=strtmp+"Fade";
                         
   strtmp = strtmp+" Breakout \n";
   return(strtmp);
}

//|-----------------------------------------------------------------------------------------|
//|                             D E I N I T I A L I Z A T I O N                             |
//|-----------------------------------------------------------------------------------------|

int deinit() {
   ObjectDelete("fgbLicenseInfo" + gi_152);
   Clear();
   return (0);
}

void Clear() {
   string name_8;
   int objs_total_0 = ObjectsTotal();
   for (int li_4 = objs_total_0 - 1; li_4 >= 0; li_4--) {
      name_8 = ObjectName(li_4);
      if (StringFind(name_8, "-!@!-" + gs_96) >= 0) ObjectDelete(name_8);
   }
}

//|-----------------------------------------------------------------------------------------|
//|                       E N D   O F   E X P E R T   A D V I S O R                         |
//|-----------------------------------------------------------------------------------------|
